//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Site.BankService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankService.Bank1Soap")]
    public interface Bank1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hasBankAccount", ReplyAction="*")]
        bool hasBankAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/hasBankAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> hasBankAccountAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBankAccount", ReplyAction="*")]
        bool CreateBankAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBankAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateBankAccountAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CashInAccount", ReplyAction="*")]
        double CashInAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CashInAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CashInAccountAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChargeAccount", ReplyAction="*")]
        bool ChargeAccount(int id, double CashToCharge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChargeAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChargeAccountAsync(int id, double CashToCharge);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Bank1SoapChannel : Site.BankService.Bank1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Bank1SoapClient : System.ServiceModel.ClientBase<Site.BankService.Bank1Soap>, Site.BankService.Bank1Soap {
        
        public Bank1SoapClient() {
        }
        
        public Bank1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Bank1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Bank1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Bank1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool hasBankAccount(int id) {
            return base.Channel.hasBankAccount(id);
        }
        
        public System.Threading.Tasks.Task<bool> hasBankAccountAsync(int id) {
            return base.Channel.hasBankAccountAsync(id);
        }
        
        public bool CreateBankAccount(int id) {
            return base.Channel.CreateBankAccount(id);
        }
        
        public System.Threading.Tasks.Task<bool> CreateBankAccountAsync(int id) {
            return base.Channel.CreateBankAccountAsync(id);
        }
        
        public double CashInAccount(int id) {
            return base.Channel.CashInAccount(id);
        }
        
        public System.Threading.Tasks.Task<double> CashInAccountAsync(int id) {
            return base.Channel.CashInAccountAsync(id);
        }
        
        public bool ChargeAccount(int id, double CashToCharge) {
            return base.Channel.ChargeAccount(id, CashToCharge);
        }
        
        public System.Threading.Tasks.Task<bool> ChargeAccountAsync(int id, double CashToCharge) {
            return base.Channel.ChargeAccountAsync(id, CashToCharge);
        }
    }
}
